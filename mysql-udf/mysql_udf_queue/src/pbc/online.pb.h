// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: online.proto

#ifndef PROTOBUF_online_2eproto__INCLUDED
#define PROTOBUF_online_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace online {
namespace message {
namespace maxthon {
namespace cn {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_online_2eproto();
void protobuf_AssignDesc_online_2eproto();
void protobuf_ShutdownFile_online_2eproto();

class Online;

// ===================================================================

class Online : public ::google::protobuf::Message {
 public:
  Online();
  virtual ~Online();
  
  Online(const Online& from);
  
  inline Online& operator=(const Online& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Online& default_instance();
  
  void Swap(Online* other);
  
  // implements Message ----------------------------------------------
  
  Online* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Online& from);
  void MergeFrom(const Online& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 mx2 = 2;
  inline bool has_mx2() const;
  inline void clear_mx2();
  static const int kMx2FieldNumber = 2;
  inline ::google::protobuf::int32 mx2() const;
  inline void set_mx2(::google::protobuf::int32 value);
  
  // optional int32 mx3 = 3;
  inline bool has_mx3() const;
  inline void clear_mx3();
  static const int kMx3FieldNumber = 3;
  inline ::google::protobuf::int32 mx3() const;
  inline void set_mx3(::google::protobuf::int32 value);
  
  // optional int32 mxa = 4;
  inline bool has_mxa() const;
  inline void clear_mxa();
  static const int kMxaFieldNumber = 4;
  inline ::google::protobuf::int32 mxa() const;
  inline void set_mxa(::google::protobuf::int32 value);
  
  // optional int32 mxios = 5;
  inline bool has_mxios() const;
  inline void clear_mxios();
  static const int kMxiosFieldNumber = 5;
  inline ::google::protobuf::int32 mxios() const;
  inline void set_mxios(::google::protobuf::int32 value);
  
  // optional int32 mxmac = 6;
  inline bool has_mxmac() const;
  inline void clear_mxmac();
  static const int kMxmacFieldNumber = 6;
  inline ::google::protobuf::int32 mxmac() const;
  inline void set_mxmac(::google::protobuf::int32 value);
  
  // optional int32 online_flag = 7;
  inline bool has_online_flag() const;
  inline void clear_online_flag();
  static const int kOnlineFlagFieldNumber = 7;
  inline ::google::protobuf::int32 online_flag() const;
  inline void set_online_flag(::google::protobuf::int32 value);
  
  // optional int32 grade = 8;
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 8;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:online.message.maxthon.cn.Online)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_mx2();
  inline void clear_has_mx2();
  inline void set_has_mx3();
  inline void clear_has_mx3();
  inline void set_has_mxa();
  inline void clear_has_mxa();
  inline void set_has_mxios();
  inline void clear_has_mxios();
  inline void set_has_mxmac();
  inline void clear_has_mxmac();
  inline void set_has_online_flag();
  inline void clear_has_online_flag();
  inline void set_has_grade();
  inline void clear_has_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 mx2_;
  ::google::protobuf::int32 mx3_;
  ::google::protobuf::int32 mxa_;
  ::google::protobuf::int32 mxios_;
  ::google::protobuf::int32 mxmac_;
  ::google::protobuf::int32 online_flag_;
  ::google::protobuf::int32 grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_online_2eproto();
  friend void protobuf_AssignDesc_online_2eproto();
  friend void protobuf_ShutdownFile_online_2eproto();
  
  void InitAsDefaultInstance();
  static Online* default_instance_;
};
// ===================================================================


// ===================================================================

// Online

// required int32 id = 1;
inline bool Online::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Online::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Online::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Online::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Online::id() const {
  return id_;
}
inline void Online::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 mx2 = 2;
inline bool Online::has_mx2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Online::set_has_mx2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Online::clear_has_mx2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Online::clear_mx2() {
  mx2_ = 0;
  clear_has_mx2();
}
inline ::google::protobuf::int32 Online::mx2() const {
  return mx2_;
}
inline void Online::set_mx2(::google::protobuf::int32 value) {
  set_has_mx2();
  mx2_ = value;
}

// optional int32 mx3 = 3;
inline bool Online::has_mx3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Online::set_has_mx3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Online::clear_has_mx3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Online::clear_mx3() {
  mx3_ = 0;
  clear_has_mx3();
}
inline ::google::protobuf::int32 Online::mx3() const {
  return mx3_;
}
inline void Online::set_mx3(::google::protobuf::int32 value) {
  set_has_mx3();
  mx3_ = value;
}

// optional int32 mxa = 4;
inline bool Online::has_mxa() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Online::set_has_mxa() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Online::clear_has_mxa() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Online::clear_mxa() {
  mxa_ = 0;
  clear_has_mxa();
}
inline ::google::protobuf::int32 Online::mxa() const {
  return mxa_;
}
inline void Online::set_mxa(::google::protobuf::int32 value) {
  set_has_mxa();
  mxa_ = value;
}

// optional int32 mxios = 5;
inline bool Online::has_mxios() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Online::set_has_mxios() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Online::clear_has_mxios() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Online::clear_mxios() {
  mxios_ = 0;
  clear_has_mxios();
}
inline ::google::protobuf::int32 Online::mxios() const {
  return mxios_;
}
inline void Online::set_mxios(::google::protobuf::int32 value) {
  set_has_mxios();
  mxios_ = value;
}

// optional int32 mxmac = 6;
inline bool Online::has_mxmac() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Online::set_has_mxmac() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Online::clear_has_mxmac() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Online::clear_mxmac() {
  mxmac_ = 0;
  clear_has_mxmac();
}
inline ::google::protobuf::int32 Online::mxmac() const {
  return mxmac_;
}
inline void Online::set_mxmac(::google::protobuf::int32 value) {
  set_has_mxmac();
  mxmac_ = value;
}

// optional int32 online_flag = 7;
inline bool Online::has_online_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Online::set_has_online_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Online::clear_has_online_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Online::clear_online_flag() {
  online_flag_ = 0;
  clear_has_online_flag();
}
inline ::google::protobuf::int32 Online::online_flag() const {
  return online_flag_;
}
inline void Online::set_online_flag(::google::protobuf::int32 value) {
  set_has_online_flag();
  online_flag_ = value;
}

// optional int32 grade = 8;
inline bool Online::has_grade() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Online::set_has_grade() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Online::clear_has_grade() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Online::clear_grade() {
  grade_ = 0;
  clear_has_grade();
}
inline ::google::protobuf::int32 Online::grade() const {
  return grade_;
}
inline void Online::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace cn
}  // namespace maxthon
}  // namespace message
}  // namespace online

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_online_2eproto__INCLUDED
